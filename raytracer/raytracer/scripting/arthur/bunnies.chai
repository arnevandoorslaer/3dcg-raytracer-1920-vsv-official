def scene_at(now)
{
  var camera = Cameras.perspective( [ "eye": pos(0,5,5),
                                      "look_at": pos(0,0,0) ] )
  var material = Materials.uniform( [ "ambient": Colors.red() * 0.4,
                                      "diffuse": Colors.white() * 0.8 ,
                                      "specular": Colors.white() * 0.8,
                                      "specular_exponent": 10,
                                      "reflectivity": 0.9,
                                      "transparency": 0.9,
                                      "refractive_index": 0.9] )
                                      
  var material2 = Materials.uniform( [ "ambient": Colors.blue() * 0.4,
                                      "diffuse": Colors.white() * 0.8 ,
                                      "specular": Colors.white() * 0.8,
                                      "specular_exponent": 10,
                                      "reflectivity": 0,
                                      "transparency": 0,
                                      "refractive_index": 0] )
                                      
  var material3 = Materials.uniform( [ "ambient": Colors.green() * 0.4,
                                      "diffuse": Colors.white() * 0.8 ,
                                      "specular": Colors.white() * 0.8,
                                      "specular_exponent": 10,
                                      "reflectivity": 0.2,
                                      "transparency": 0.2,
                                      "refractive_index": 0.2] )
                                      
  var material4 = Materials.uniform( [ "ambient": Colors.yellow() * 0.4,
                                      "diffuse": Colors.white() * 0.8 ,
                                      "specular": Colors.white() * 0.8,
                                      "specular_exponent": 10,
                                      "reflectivity": 0,
                                      "transparency": 0,
                                      "refractive_index": 0] )
                                      
  var material5 = Materials.uniform( [ "ambient": Colors.white() * 0.4,
                                      "diffuse": Colors.white() * 0.8 ,
                                      "specular": Colors.white() * 0.8,
                                      "specular_exponent": 10,
                                      "reflectivity": 0.5,
                                      "transparency": 0.5,
                                      "refractive_index": 0.5] )
                                      
                                      
                                      
  global bunny = mesh("C:/Users/kinga/Documents/outputBunny.txt")
  
  var primitives = []

  primitives.push_back( translate(vec(-3, -2, 0), decorate(material, bunny)) )
  primitives.push_back( translate(vec(-1.5, -2, 0), decorate(material2, bunny)) )
  primitives.push_back( translate(vec(0, -2, 0), decorate(material3, bunny)) )
  primitives.push_back( translate(vec(1.5, -2, 0), decorate(material4, bunny)) )
  primitives.push_back( translate(vec(3, -2, 0), decorate(material5, bunny)) )    

  var root = union(primitives)

  var lights = [ Lights.omnidirectional( pos(0,0,2), Colors.white() )]
  

  create_scene(camera, root, lights)
}

var renderer = Renderers.standard( [ "width": 500,
                                     "height": 500,
                                     "sampler": Samplers.single(),
                                     "ray_tracer": Raytracers.v5() ] )

pipeline( scene_animation(scene_at, seconds(1)),
          [ Pipeline.animation(1),
            Pipeline.renderer(renderer),
            Pipeline.wif(),
            Pipeline.base64(),
            Pipeline.stdout() ] )